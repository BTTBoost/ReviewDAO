// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class _Banished extends ethereum.Event {
  get params(): _Banished__Params {
    return new _Banished__Params(this);
  }
}

export class _Banished__Params {
  _event: _Banished;

  constructor(event: _Banished) {
    this._event = event;
  }

  get hash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get whitelisted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get downvotes(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class _ChallengeModified extends ethereum.Event {
  get params(): _ChallengeModified__Params {
    return new _ChallengeModified__Params(this);
  }
}

export class _ChallengeModified__Params {
  _event: _ChallengeModified;

  constructor(event: _ChallengeModified) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get challengerReward(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get listingStake(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get challengerStake(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get votePrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get timer(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get challenger(): Address {
    return this._event.parameters[6].value.toAddress();
  }
}

export class _ListingModified extends ethereum.Event {
  get params(): _ListingModified__Params {
    return new _ListingModified__Params(this);
  }
}

export class _ListingModified__Params {
  _event: _ListingModified;

  constructor(event: _ListingModified) {
    this._event = event;
  }

  get hash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get whitelisted(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get baseUri(): string {
    return this._event.parameters[3].value.toString();
  }

  get creator(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get stake(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get challengerReward(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get timer(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get challengeId(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get challenged(): boolean {
    return this._event.parameters[9].value.toBoolean();
  }

  get statusId(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class _ListingStatus extends ethereum.Event {
  get params(): _ListingStatus__Params {
    return new _ListingStatus__Params(this);
  }
}

export class _ListingStatus__Params {
  _event: _ListingStatus;

  constructor(event: _ListingStatus) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get votes(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class _ResolveListing extends ethereum.Event {
  get params(): _ResolveListing__Params {
    return new _ResolveListing__Params(this);
  }
}

export class _ResolveListing__Params {
  _event: _ResolveListing;

  constructor(event: _ResolveListing) {
    this._event = event;
  }

  get hash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get whitelisted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get resolver(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get statsId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class _Withdrawal extends ethereum.Event {
  get params(): _Withdrawal__Params {
    return new _Withdrawal__Params(this);
  }
}

export class _Withdrawal__Params {
  _event: _Withdrawal;

  constructor(event: _Withdrawal) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReviewDAOList__challengesResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: Address;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    return map;
  }
}

export class ReviewDAOList__listingsResult {
  value0: string;
  value1: boolean;
  value2: string;
  value3: Address;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: boolean;
  value9: BigInt;

  constructor(
    value0: string,
    value1: boolean,
    value2: string,
    value3: Address,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: boolean,
    value9: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromBoolean(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    return map;
  }
}

export class ReviewDAOList__pollsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class ReviewDAOList extends ethereum.SmartContract {
  static bind(address: Address): ReviewDAOList {
    return new ReviewDAOList("ReviewDAOList", address);
  }

  baseUri(): string {
    let result = super.call("baseUri", "baseUri():(string)", []);

    return result[0].toString();
  }

  try_baseUri(): ethereum.CallResult<string> {
    let result = super.tryCall("baseUri", "baseUri():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  challenges(param0: BigInt): ReviewDAOList__challengesResult {
    let result = super.call(
      "challenges",
      "challenges(uint256):(uint256,uint256,uint256,uint256,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new ReviewDAOList__challengesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toAddress()
    );
  }

  try_challenges(
    param0: BigInt
  ): ethereum.CallResult<ReviewDAOList__challengesResult> {
    let result = super.tryCall(
      "challenges",
      "challenges(uint256):(uint256,uint256,uint256,uint256,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ReviewDAOList__challengesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toAddress()
      )
    );
  }

  creator(): Address {
    let result = super.call("creator", "creator():(address)", []);

    return result[0].toAddress();
  }

  try_creator(): ethereum.CallResult<Address> {
    let result = super.tryCall("creator", "creator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRewardBalance(): BigInt {
    let result = super.call(
      "getRewardBalance",
      "getRewardBalance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getRewardBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRewardBalance",
      "getRewardBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  listings(param0: Bytes): ReviewDAOList__listingsResult {
    let result = super.call(
      "listings",
      "listings(bytes32):(string,bool,string,address,uint256,uint256,uint256,uint256,bool,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new ReviewDAOList__listingsResult(
      result[0].toString(),
      result[1].toBoolean(),
      result[2].toString(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBoolean(),
      result[9].toBigInt()
    );
  }

  try_listings(
    param0: Bytes
  ): ethereum.CallResult<ReviewDAOList__listingsResult> {
    let result = super.tryCall(
      "listings",
      "listings(bytes32):(string,bool,string,address,uint256,uint256,uint256,uint256,bool,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ReviewDAOList__listingsResult(
        value[0].toString(),
        value[1].toBoolean(),
        value[2].toString(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBoolean(),
        value[9].toBigInt()
      )
    );
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nameRegistered(param0: Bytes): boolean {
    let result = super.call(
      "nameRegistered",
      "nameRegistered(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toBoolean();
  }

  try_nameRegistered(param0: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "nameRegistered",
      "nameRegistered(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  polls(param0: BigInt): ReviewDAOList__pollsResult {
    let result = super.call("polls", "polls(uint256):(uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return new ReviewDAOList__pollsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_polls(param0: BigInt): ethereum.CallResult<ReviewDAOList__pollsResult> {
    let result = super.tryCall("polls", "polls(uint256):(uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ReviewDAOList__pollsResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  test(): BigInt {
    let result = super.call("test", "test():(uint256)", []);

    return result[0].toBigInt();
  }

  try_test(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("test", "test():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get name_(): string {
    return this._call.inputValues[0].value.toString();
  }

  get baseUri_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get creator_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get token_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get ReviewDAO_(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApplyListingCall extends ethereum.Call {
  get inputs(): ApplyListingCall__Inputs {
    return new ApplyListingCall__Inputs(this);
  }

  get outputs(): ApplyListingCall__Outputs {
    return new ApplyListingCall__Outputs(this);
  }
}

export class ApplyListingCall__Inputs {
  _call: ApplyListingCall;

  constructor(call: ApplyListingCall) {
    this._call = call;
  }

  get listingId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get name_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get baseUri_(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ApplyListingCall__Outputs {
  _call: ApplyListingCall;

  constructor(call: ApplyListingCall) {
    this._call = call;
  }
}

export class BanishListingCall extends ethereum.Call {
  get inputs(): BanishListingCall__Inputs {
    return new BanishListingCall__Inputs(this);
  }

  get outputs(): BanishListingCall__Outputs {
    return new BanishListingCall__Outputs(this);
  }
}

export class BanishListingCall__Inputs {
  _call: BanishListingCall;

  constructor(call: BanishListingCall) {
    this._call = call;
  }

  get listingId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class BanishListingCall__Outputs {
  _call: BanishListingCall;

  constructor(call: BanishListingCall) {
    this._call = call;
  }
}

export class ChallengeListingCall extends ethereum.Call {
  get inputs(): ChallengeListingCall__Inputs {
    return new ChallengeListingCall__Inputs(this);
  }

  get outputs(): ChallengeListingCall__Outputs {
    return new ChallengeListingCall__Outputs(this);
  }
}

export class ChallengeListingCall__Inputs {
  _call: ChallengeListingCall;

  constructor(call: ChallengeListingCall) {
    this._call = call;
  }

  get listingId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ChallengeListingCall__Outputs {
  _call: ChallengeListingCall;

  constructor(call: ChallengeListingCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall extends ethereum.Call {
  get inputs(): ClaimRewardsCall__Inputs {
    return new ClaimRewardsCall__Inputs(this);
  }

  get outputs(): ClaimRewardsCall__Outputs {
    return new ClaimRewardsCall__Outputs(this);
  }
}

export class ClaimRewardsCall__Inputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall__Outputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class DownvoteListingCall extends ethereum.Call {
  get inputs(): DownvoteListingCall__Inputs {
    return new DownvoteListingCall__Inputs(this);
  }

  get outputs(): DownvoteListingCall__Outputs {
    return new DownvoteListingCall__Outputs(this);
  }
}

export class DownvoteListingCall__Inputs {
  _call: DownvoteListingCall;

  constructor(call: DownvoteListingCall) {
    this._call = call;
  }

  get listingId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DownvoteListingCall__Outputs {
  _call: DownvoteListingCall;

  constructor(call: DownvoteListingCall) {
    this._call = call;
  }
}

export class ResolveListingCall extends ethereum.Call {
  get inputs(): ResolveListingCall__Inputs {
    return new ResolveListingCall__Inputs(this);
  }

  get outputs(): ResolveListingCall__Outputs {
    return new ResolveListingCall__Outputs(this);
  }
}

export class ResolveListingCall__Inputs {
  _call: ResolveListingCall;

  constructor(call: ResolveListingCall) {
    this._call = call;
  }

  get listingId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ResolveListingCall__Outputs {
  _call: ResolveListingCall;

  constructor(call: ResolveListingCall) {
    this._call = call;
  }
}

export class UpvoteListingCall extends ethereum.Call {
  get inputs(): UpvoteListingCall__Inputs {
    return new UpvoteListingCall__Inputs(this);
  }

  get outputs(): UpvoteListingCall__Outputs {
    return new UpvoteListingCall__Outputs(this);
  }
}

export class UpvoteListingCall__Inputs {
  _call: UpvoteListingCall;

  constructor(call: UpvoteListingCall) {
    this._call = call;
  }

  get listingId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class UpvoteListingCall__Outputs {
  _call: UpvoteListingCall;

  constructor(call: UpvoteListingCall) {
    this._call = call;
  }
}

export class VoteNegativeChallengeCall extends ethereum.Call {
  get inputs(): VoteNegativeChallengeCall__Inputs {
    return new VoteNegativeChallengeCall__Inputs(this);
  }

  get outputs(): VoteNegativeChallengeCall__Outputs {
    return new VoteNegativeChallengeCall__Outputs(this);
  }
}

export class VoteNegativeChallengeCall__Inputs {
  _call: VoteNegativeChallengeCall;

  constructor(call: VoteNegativeChallengeCall) {
    this._call = call;
  }

  get listingId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class VoteNegativeChallengeCall__Outputs {
  _call: VoteNegativeChallengeCall;

  constructor(call: VoteNegativeChallengeCall) {
    this._call = call;
  }
}

export class VotePositiveChallengeCall extends ethereum.Call {
  get inputs(): VotePositiveChallengeCall__Inputs {
    return new VotePositiveChallengeCall__Inputs(this);
  }

  get outputs(): VotePositiveChallengeCall__Outputs {
    return new VotePositiveChallengeCall__Outputs(this);
  }
}

export class VotePositiveChallengeCall__Inputs {
  _call: VotePositiveChallengeCall;

  constructor(call: VotePositiveChallengeCall) {
    this._call = call;
  }

  get listingId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class VotePositiveChallengeCall__Outputs {
  _call: VotePositiveChallengeCall;

  constructor(call: VotePositiveChallengeCall) {
    this._call = call;
  }
}
