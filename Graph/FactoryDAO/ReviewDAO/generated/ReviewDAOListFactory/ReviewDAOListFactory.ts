// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class _NewList extends ethereum.Event {
  get params(): _NewList__Params {
    return new _NewList__Params(this);
  }
}

export class _NewList__Params {
  _event: _NewList;

  constructor(event: _NewList) {
    this._event = event;
  }

  get newList(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get hash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get baseUri(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class ReviewDAOListFactory extends ethereum.SmartContract {
  static bind(address: Address): ReviewDAOListFactory {
    return new ReviewDAOListFactory("ReviewDAOListFactory", address);
  }

  allLists(): Array<Address> {
    let result = super.call("allLists", "allLists():(address[])", []);

    return result[0].toAddressArray();
  }

  try_allLists(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("allLists", "allLists():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getList(nameHash_: Bytes): Address {
    let result = super.call("getList", "getList(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(nameHash_)
    ]);

    return result[0].toAddress();
  }

  try_getList(nameHash_: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("getList", "getList(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(nameHash_)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getListAddress(nameHash_: Bytes): Address {
    let result = super.call(
      "getListAddress",
      "getListAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(nameHash_)]
    );

    return result[0].toAddress();
  }

  try_getListAddress(nameHash_: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getListAddress",
      "getListAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(nameHash_)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateListCall extends ethereum.Call {
  get inputs(): CreateListCall__Inputs {
    return new CreateListCall__Inputs(this);
  }

  get outputs(): CreateListCall__Outputs {
    return new CreateListCall__Outputs(this);
  }
}

export class CreateListCall__Inputs {
  _call: CreateListCall;

  constructor(call: CreateListCall) {
    this._call = call;
  }

  get nameHash_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get name_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get baseUri_(): string {
    return this._call.inputValues[2].value.toString();
  }

  get creator_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get token_(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get ReviewDAO_(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class CreateListCall__Outputs {
  _call: CreateListCall;

  constructor(call: CreateListCall) {
    this._call = call;
  }
}
