// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class _NewListCreated extends ethereum.Event {
  get params(): _NewListCreated__Params {
    return new _NewListCreated__Params(this);
  }
}

export class _NewListCreated__Params {
  _event: _NewListCreated;

  constructor(event: _NewListCreated) {
    this._event = event;
  }

  get hash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get list(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class _NewProposal extends ethereum.Event {
  get params(): _NewProposal__Params {
    return new _NewProposal__Params(this);
  }
}

export class _NewProposal__Params {
  _event: _NewProposal;

  constructor(event: _NewProposal) {
    this._event = event;
  }

  get hash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get baseUri(): string {
    return this._event.parameters[2].value.toString();
  }

  get creator(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get votes(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class _ProposalModified extends ethereum.Event {
  get params(): _ProposalModified__Params {
    return new _ProposalModified__Params(this);
  }
}

export class _ProposalModified__Params {
  _event: _ProposalModified;

  constructor(event: _ProposalModified) {
    this._event = event;
  }

  get hash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get votes(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReviewDAO extends ethereum.SmartContract {
  static bind(address: Address): ReviewDAO {
    return new ReviewDAO("ReviewDAO", address);
  }

  getBanishListingLimit(): BigInt {
    let result = super.call(
      "getBanishListingLimit",
      "getBanishListingLimit():(int256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getBanishListingLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBanishListingLimit",
      "getBanishListingLimit():(int256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getChallengeTimer(): BigInt {
    let result = super.call(
      "getChallengeTimer",
      "getChallengeTimer():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getChallengeTimer(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getChallengeTimer",
      "getChallengeTimer():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getListingPriceRDT(): BigInt {
    let result = super.call(
      "getListingPriceRDT",
      "getListingPriceRDT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getListingPriceRDT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getListingPriceRDT",
      "getListingPriceRDT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getListingTimer(): BigInt {
    let result = super.call(
      "getListingTimer",
      "getListingTimer():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getListingTimer(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getListingTimer",
      "getListingTimer():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getListingVotePriceRDT(): BigInt {
    let result = super.call(
      "getListingVotePriceRDT",
      "getListingVotePriceRDT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getListingVotePriceRDT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getListingVotePriceRDT",
      "getListingVotePriceRDT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMembershipAmountRDT(): BigInt {
    let result = super.call(
      "getMembershipAmountRDT",
      "getMembershipAmountRDT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getMembershipAmountRDT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMembershipAmountRDT",
      "getMembershipAmountRDT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNewListCreationReward(): BigInt {
    let result = super.call(
      "getNewListCreationReward",
      "getNewListCreationReward():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getNewListCreationReward(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNewListCreationReward",
      "getNewListCreationReward():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get factory_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get NFT_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get token_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateNewListCall extends ethereum.Call {
  get inputs(): CreateNewListCall__Inputs {
    return new CreateNewListCall__Inputs(this);
  }

  get outputs(): CreateNewListCall__Outputs {
    return new CreateNewListCall__Outputs(this);
  }
}

export class CreateNewListCall__Inputs {
  _call: CreateNewListCall;

  constructor(call: CreateNewListCall) {
    this._call = call;
  }
}

export class CreateNewListCall__Outputs {
  _call: CreateNewListCall;

  constructor(call: CreateNewListCall) {
    this._call = call;
  }
}

export class GenerateListsForTestingPurposesCall extends ethereum.Call {
  get inputs(): GenerateListsForTestingPurposesCall__Inputs {
    return new GenerateListsForTestingPurposesCall__Inputs(this);
  }

  get outputs(): GenerateListsForTestingPurposesCall__Outputs {
    return new GenerateListsForTestingPurposesCall__Outputs(this);
  }
}

export class GenerateListsForTestingPurposesCall__Inputs {
  _call: GenerateListsForTestingPurposesCall;

  constructor(call: GenerateListsForTestingPurposesCall) {
    this._call = call;
  }

  get hash_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get hash2_(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get name_(): string {
    return this._call.inputValues[2].value.toString();
  }

  get name2_(): string {
    return this._call.inputValues[3].value.toString();
  }

  get baseUri_(): string {
    return this._call.inputValues[4].value.toString();
  }

  get baseUri2_(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class GenerateListsForTestingPurposesCall__Outputs {
  _call: GenerateListsForTestingPurposesCall;

  constructor(call: GenerateListsForTestingPurposesCall) {
    this._call = call;
  }
}

export class ProposeNewListCall extends ethereum.Call {
  get inputs(): ProposeNewListCall__Inputs {
    return new ProposeNewListCall__Inputs(this);
  }

  get outputs(): ProposeNewListCall__Outputs {
    return new ProposeNewListCall__Outputs(this);
  }
}

export class ProposeNewListCall__Inputs {
  _call: ProposeNewListCall;

  constructor(call: ProposeNewListCall) {
    this._call = call;
  }

  get hash_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get name_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get baseUri_(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ProposeNewListCall__Outputs {
  _call: ProposeNewListCall;

  constructor(call: ProposeNewListCall) {
    this._call = call;
  }
}

export class VoteForProposalCall extends ethereum.Call {
  get inputs(): VoteForProposalCall__Inputs {
    return new VoteForProposalCall__Inputs(this);
  }

  get outputs(): VoteForProposalCall__Outputs {
    return new VoteForProposalCall__Outputs(this);
  }
}

export class VoteForProposalCall__Inputs {
  _call: VoteForProposalCall;

  constructor(call: VoteForProposalCall) {
    this._call = call;
  }

  get hash_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class VoteForProposalCall__Outputs {
  _call: VoteForProposalCall;

  constructor(call: VoteForProposalCall) {
    this._call = call;
  }
}
